name: Run Decoder, Count Patterns, and Analyze Pattern Counts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-decoder-count-patterns-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: decoder-image:${{ github.sha }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Create output directories
        run: |
          mkdir -p ${{ github.workspace }}/plots/cluster
          mkdir -p ${{ github.workspace }}/results
          chmod -R 777 ${{ github.workspace }}/plots
          chmod -R 777 ${{ github.workspace }}/results
      - name: Run decoder in Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:${{ github.sha }} \
            bash -c "
              set -e
              echo 'Starting decoder run...'
              python -m subgraph_mining.decoder \
                --dataset=metta.pkl \
                --n_trials 1000 \
                --out_path=/app/results/patterns.pkl \
                > /app/results/decoder_output.log 2>&1
              echo 'Decoder run complete.'
              echo 'Checking output directories...'
              ls -la /app/plots/cluster
              ls -la /app/results
            "
      - name: Check for generated files
        run: |
          if [ -f "results/patterns.pkl" ]; then echo "patterns.pkl exists"; else echo "patterns.pkl not found"; fi
          if [ -d "plots/cluster" ]; then echo "Cluster plots directory exists"; else echo "No cluster plots found"; fi
      - name: Run count patterns with decoder output as input
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:${{ github.sha }} \
            bash -c "
              set -e
              echo 'Starting count patterns...'
              python -m analyze.count_patterns \
                --dataset=metta.pkl  \
                --out_path=/app/results/counts.json \
                --queries_path=results/patterns.pkl \
                > /app/results/count_patterns_output.log 2>&1
              echo 'Count patterns complete.'
              echo 'Checking output directories...'
              ls -la /app/results
            "
      - name: Check for count patterns output
        run: |
          if [ -f "results/counts.json" ]; then echo "counts.json exists"; else echo "counts.json not found"; fi
      - name: Run analyze pattern counts with the counts output
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:${{ github.sha }} \
            bash -c "
              set -e
              echo 'Starting analyze pattern counts...'
              python -m analyze.analyze_pattern_counts \
                --counts_path=/app/results/ \
                > /app/results/analyze_pattern_counts_output.log 2>&1
              echo 'Analyze pattern counts complete.'
              echo 'Checking output directories...'
              ls -la /app/results
            "
      - name: Check for analyze pattern counts output
        run: |
          if [ -f "results/analyze_pattern_counts_output.json" ]; then echo "analyze_pattern_counts_output.json exists"; else echo "analyze_pattern_counts_output.json not found"; fi
      - name: Upload plots and results as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: decoder-plots-results
          path: |
            plots/
            results/
          retention-days: 7
          if-no-files-found: warn  # Warn if no files found instead of failing

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: decoder-logs
          path: |
            results/decoder_output.log
            results/count_patterns_output.log
            results/analyze_pattern_counts_output.log
            *.log
            *.err
          if-no-files-found: ignore
